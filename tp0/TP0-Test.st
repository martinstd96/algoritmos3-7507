TestCase subclass: #PruebasAscensor	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'tp0-TP0-Test'!!PruebasAscensor methodsFor: 'tests' stamp: 'MartinStefanelli 10/9/2018 01:32'!test05CrearUnAscensorCrearTresPersonasDefinirSuPesoAgregarlasAlAscensorVerificarQueNoExcedioElLimiteDeSuCapacidad	"Arrange"	| ascensor nelly mateo jorge |		ascensor := Ascensor new.	ascensor especificarPesoMaximo: 250.		jorge := Persona new.	jorge especificarNombre: 'Jorge'.	jorge especificarPeso: 70.	nelly := Persona new.	nelly especificarNombre: 'Nelly'.	nelly especificarPeso: 75.	mateo := Persona new.	mateo especificarNombre: 'Mateo'.	mateo especificarPeso: 85.	ascensor recibirPersona: jorge.	ascensor recibirPersona: nelly.	ascensor recibirPersona: mateo.		self deny: (  ascensor excedioLimiteDeCapacidad ).	! !!PruebasAscensor methodsFor: 'tests' stamp: 'MartinStefanelli 10/9/2018 01:21'!test01CrearUnAscensorCrearTresPersonasAgregarlasAlAscensorVerificarLaCantidadDePersonas	"Arrange"	| ascensor Nelly Ramiro Mateo personas |		ascensor  := Ascensor new.		Nelly  := Persona new.	Ramiro := Persona new.	Mateo := Persona new.		personas := 3.		"Act"	ascensor recibirPersona: Ramiro. 	ascensor recibirPersona: Nelly.	ascensor recibirPersona: Ramiro.	"Assert"	self assert: ( ascensor cantidadDePersonas ) equals: personas. 	ascensor liberar.	self assert: ( ascensor cantidadDePersonas ) equals: 0  	! !!PruebasAscensor methodsFor: 'tests' stamp: 'MartinStefanelli 10/9/2018 01:32'!test06CrearUnAscensorCrearTresPersonasDefinirSuPesoAgregarlasAlAscensorVerificarElPesoDelAscensorSuCapacidadLiberarloYVolverAVerificarLoAnterior	"Arrange"	| ascensor nelly mateo jorge peso personas pesoLiberado personasLiberado |		ascensor := Ascensor new.	ascensor especificarPesoMaximo: 250.		jorge := Persona new.	jorge especificarNombre: 'Jorge'.	jorge especificarPeso: 70.	nelly := Persona new.	nelly especificarNombre: 'Nelly'.	nelly especificarPeso: 75.	mateo := Persona new.	mateo especificarNombre: 'Mateo'.	mateo especificarPeso: 85.	ascensor recibirPersona: jorge.	ascensor recibirPersona: nelly.	ascensor recibirPersona: mateo.		peso := 230.	personas := 3.	pesoLiberado := 0.	personasLiberado := 0.		self assert: ( ascensor capacidad ) equals: peso.	self assert: ( ascensor cantidadDePersonas ) equals: personas.		ascensor liberar.		self assert: ( ascensor capacidad ) equals: pesoLiberado .	self assert: ( ascensor cantidadDePersonas ) equals: personasLiberado .	! !!PruebasAscensor methodsFor: 'tests' stamp: 'MartinStefanelli 10/9/2018 01:12'!test03CrearUnAscensorCrearTresPersonasDefinirSuPesoAgregarlasAlAscensorVerificarQueSeExedioElLimiteDeLaCapacidad	"Arrange"	| ascensor nelly ramiro jorge |		ascensor := Ascensor new.	ascensor especificarPesoMaximo: 250.		jorge := Persona new.	jorge especificarNombre: 'Jorge'.	jorge especificarPeso: 70.	nelly := Persona new.	nelly especificarNombre: 'Nelly'.	nelly especificarPeso: 75.	ramiro := Persona new.	ramiro especificarNombre: 'Ramiro'.	ramiro especificarPeso: 110.	ascensor recibirPersona: jorge.	ascensor recibirPersona: nelly.	ascensor recibirPersona: ramiro.		self assert: ( ascensor excedioLimiteDeCapacidad ).	 	! !!PruebasAscensor methodsFor: 'tests' stamp: 'MartinStefanelli 10/9/2018 01:19'!test04CrearUnAscensorCrearTresPersonasDefinirSuPesoAgregarlasAlAscensorVerificarElPesoDelAscensorYExpulsarAUnaPersonaYVerificarLaCantidad	"Arrange"	| ascensor nelly ramiro jorge peso pesoSinPersona cantidad |		ascensor := Ascensor new.	ascensor especificarPesoMaximo: 250.		jorge := Persona new.	jorge especificarNombre: 'Jorge'.	jorge especificarPeso: 70.	nelly := Persona new.	nelly especificarNombre: 'Nelly'.	nelly especificarPeso: 75.	ramiro := Persona new.	ramiro especificarNombre: 'Ramiro'.	ramiro especificarPeso: 110.	ascensor recibirPersona: jorge.	ascensor recibirPersona: nelly.	ascensor recibirPersona: ramiro.		peso := 255.	pesoSinPersona := 145.	cantidad := 2.		self assert: ( ascensor capacidad ) equals: peso.		ascensor expulsarPersona. 		self assert: ( ascensor capacidad ) equals: pesoSinPersona.		self assert: ( ascensor cantidadDePersonas ) equals:  cantidad. 	 	! !!PruebasAscensor methodsFor: 'tests' stamp: 'MartinStefanelli 10/9/2018 01:12'!test02CrearUnAscensorCrearTresPersonasDefinirSuPesoAgregarlasAlAscensorVerificarLaCapacidadDelAscensor	"Arrange"	| ascensor nelly ramiro jorge mateo peso |		ascensor := Ascensor new.	ascensor especificarPesoMaximo: 250.		jorge := Persona new.	jorge especificarNombre: 'Jorge'.	jorge especificarPeso: 70.	nelly := Persona new.	nelly especificarNombre: 'Nelly'.	nelly especificarPeso: 75.	ramiro := Persona new.	ramiro especificarNombre: 'Ramiro'.	ramiro especificarPeso: 110.	mateo := Persona new.	mateo especificarNombre: 'Mateo'.	mateo especificarPeso: 85.	ascensor recibirPersona: jorge.	ascensor recibirPersona: nelly.	ascensor recibirPersona: ramiro.		peso := 255.	"Assert"	self assert: ( ascensor capacidad ) equals: peso. 		! !