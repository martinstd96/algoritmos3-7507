Object subclass: #Agenda	instanceVariableNames: 'gestionadorDeEventos invitables capacidadPersonas capacidadRecursos capacidadMaxima'	classVariableNames: ''	poolDictionaries: ''	category: 'TP1'!!Agenda methodsFor: 'initialization' stamp: 'MartinStefanelli 10/15/2018 01:01'!initialize	gestionadorDeEventos := GestionadorDeEventos new.	invitables := Dictionary new.	capacidadMaxima := 5.	capacidadPersonas := 0.	capacidadRecursos := 0.! !!Agenda methodsFor: 'as yet unclassified' stamp: 'MartinStefanelli 10/15/2018 01:03'!agregarRecurso: unRecurso	| recurso |	( self existeRecurso: unRecurso ) ifTrue: [ ( RecursoYaExistenteError new ) signal ].		( capacidadRecursos >= capacidadMaxima ) ifTrue: [ ( CapacidadMaximaDeRecursosError new ) signal ].		recurso := Recurso new.		recurso agregarNombre: unRecurso.	invitables at: unRecurso put: recurso.	capacidadRecursos := capacidadRecursos + 1. ! !!Agenda methodsFor: 'as yet unclassified' stamp: 'MartinStefanelli 10/15/2018 02:34'!_AsignarEvento: unEvento aInvitados: unosInvitados 	| invitable |	( unosInvitados ) do: [ :invitado |  		invitable := self _ValidarInvitableYDevolverloSiSeEncuentra: invitado.		invitable agregarEvento: unEvento. 		].! !!Agenda methodsFor: 'as yet unclassified' stamp: 'MartinStefanelli 10/15/2018 02:06'!removerEvento: unEvento	gestionadorDeEventos remover: unEvento.		( invitables ) valuesDo: [ :invitable |		[ invitable removerEvento: unEvento ] on: ( NoExisteEventoError ) do: [ :excepcion | excepcion resume ] ]	! !!Agenda methodsFor: 'as yet unclassified' stamp: 'MartinStefanelli 9/30/2018 13:24'!existeEvento: unEvento	^ ( gestionadorDeEventos existe: unEvento )! !!Agenda methodsFor: 'as yet unclassified' stamp: 'MartinStefanelli 10/15/2018 01:42'!estaOcupado: unInvitable enAnio: unAnio mes: unMes dia: unDia hora: unaHora		| invitable fecha unosMinutos fechaObtenida |		invitable := self _ValidarInvitableYDevolverloSiSeEncuentra: unInvitable. 	unosMinutos := 0.	fecha := Fecha agregarFechasConFormatoDeAnio: unAnio 		            mes: unMes 		            dia: unDia 		            hora: unaHora		            minutos: unosMinutos.			fechaObtenida := fecha obtenerFecha. 		^ ( invitable estaOcupadoEnFecha: fechaObtenida )	! !!Agenda methodsFor: 'as yet unclassified' stamp: 'MartinStefanelli 10/15/2018 01:45'!existeRecurso: unRecurso	[ invitables at: unRecurso ] on: ( KeyNotFound ) do: [ ^ false ].		^ true.! !!Agenda methodsFor: 'as yet unclassified' stamp: 'MartinStefanelli 10/15/2018 01:44'!existePersona: unaPersona	[ invitables at: unaPersona ] on: ( KeyNotFound ) do: [ ^ false ].		^ true.! !!Agenda methodsFor: 'as yet unclassified' stamp: 'MartinStefanelli 10/15/2018 01:01'!agregarPersona: unaPersona		| persona |		( self existePersona: unaPersona ) ifTrue: [ ( PersonaYaExistenteError new ) signal ].		( capacidadPersonas >= capacidadMaxima ) ifTrue: [ ( CapacidadMaximaDePersonasError new ) signal ].		persona := Persona new.		persona agregarNombre: unaPersona.	invitables at: unaPersona put: persona.	capacidadPersonas := capacidadPersonas + 1.  ! !!Agenda methodsFor: 'as yet unclassified' stamp: 'MartinStefanelli 10/15/2018 18:28'!_ValidarInvitableYDevolverloSiSeEncuentra: unInvitable	| invitable |		[ invitable := invitables at: unInvitable ] on: ( KeyNotFound ) do: [ 	( InvitadoNoEncontradoError new ) signal ].	^ invitable. ! !!Agenda methodsFor: 'as yet unclassified' stamp: 'MartinStefanelli 9/30/2018 23:26'!agregarUnEventoConNombre: nombreEvento invitados: unosInvitados semanas: unasSemanas enAnio: unAnio mes: unMes dia: unDia hora: unaHora	| evento copiaInvitados |		( unasSemanas < 1 ) ifTrue: [ ( CantidadDeSemanasInvalidasError new ) signal ].		copiaInvitados := unosInvitados copy.	gestionadorDeEventos agregarUnEventoConNombre: nombreEvento 	                     invitados: copiaInvitados  	                     semanas: unasSemanas 	                     enAnio: unAnio 	                     mes: unMes 	                     dia: unDia 	                     hora: unaHora. 		evento := gestionadorDeEventos obtener: nombreEvento.		self _AsignarEvento: evento aInvitados: copiaInvitados ! !Object subclass: #Calendario	instanceVariableNames: 'agenda'	classVariableNames: ''	poolDictionaries: ''	category: 'TP1'!!Calendario methodsFor: 'as yet unclassified' stamp: 'MartinStefanelli 9/30/2018 12:58'!agregarEventoSemanalConNombre: nombreEvento semanas: semanas invitados: unosInvitados enAnio: unAnio mes: unMes dia: unDia hora: unaHora		agenda agregarUnEventoConNombre: nombreEvento 	       invitados: unosInvitados 	       semanas: semanas  	       enAnio: unAnio	       mes: unMes 	       dia: unDia	       hora: unaHora.! !!Calendario methodsFor: 'as yet unclassified' stamp: 'MartinStefanelli 9/30/2018 12:58'!existePersona: unaPersona	^ ( agenda existePersona: unaPersona )! !!Calendario methodsFor: 'as yet unclassified' stamp: 'MartinStefanelli 10/1/2018 11:15'!agregarEventoConNombre: nombreEvento invitados: unosInvitados enAnio: unAnio mes: unMes dia: unDia hora: unaHora	| unasSemanas |		unasSemanas := 1.		agenda agregarUnEventoConNombre: nombreEvento 	       invitados: unosInvitados 	       semanas: unasSemanas  	       enAnio: unAnio	       mes: unMes 	       dia: unDia	       hora: unaHora.! !!Calendario methodsFor: 'as yet unclassified' stamp: 'MartinStefanelli 9/30/2018 12:58'!agregarRecurso: unRecurso	agenda agregarRecurso: unRecurso. ! !!Calendario methodsFor: 'as yet unclassified' stamp: 'MartinStefanelli 9/30/2018 12:58'!removerEvento: unEvento	agenda removerEvento: unEvento ! !!Calendario methodsFor: 'as yet unclassified' stamp: 'MartinStefanelli 9/30/2018 12:58'!agregarPersona: unaPersona	agenda agregarPersona: unaPersona ! !!Calendario methodsFor: 'as yet unclassified' stamp: 'MartinStefanelli 9/30/2018 12:58'!estaOcupado: personaORecurso enAnio: unAnio mes: unMes dia: unDia hora: unaHora	^ ( agenda estaOcupado: personaORecurso enAnio: unAnio mes: unMes dia: unDia hora: unaHora )! !!Calendario methodsFor: 'as yet unclassified' stamp: 'MartinStefanelli 9/30/2018 12:58'!existeRecurso: unRecurso	^ ( agenda existeRecurso: unRecurso )! !!Calendario methodsFor: 'initialization' stamp: 'MartinStefanelli 10/14/2018 21:25'!initialize	agenda := Agenda new.! !Error subclass: #CantidadDeSemanasInvalidasError	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'TP1'!Error subclass: #CapacidadMaximaDePersonasError	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'TP1'!Error subclass: #CapacidadMaximaDeRecursosError	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'TP1'!Object subclass: #Evento	instanceVariableNames: 'nombre fechas invitados'	classVariableNames: ''	poolDictionaries: ''	category: 'TP1'!!Evento methodsFor: 'initialization' stamp: 'MartinStefanelli 10/14/2018 21:43'!initialize	nombre := ''.	fechas := OrderedCollection new.	invitados := OrderedCollection new.! !!Evento methodsFor: 'as yet unclassified' stamp: 'MartinStefanelli 9/30/2018 19:15'!agregarInvitados: unosInvitados	invitados := unosInvitados ! !!Evento methodsFor: 'as yet unclassified' stamp: 'MartinStefanelli 10/1/2018 12:34'!obtenerNombre	( nombre = '' ) ifTrue: [ ( NombreNoDefinidoError new ) signal ].		^ nombre! !!Evento methodsFor: 'as yet unclassified' stamp: 'MartinStefanelli 10/1/2018 02:55'!agregarFechasConFormatoDeSemanas: unasSemanas anio: unAnio mes: unMes dia: unDia hora: unaHora	| fecha unosMinutos diasEnUnaSemana fechaObtenida fechaIncrementada semanasTotales |		unosMinutos := 0.	diasEnUnaSemana := 7.	semanasTotales := unasSemanas - 1. "Este 1 es porque ya tengo una semana, la cual es la que me pasan"		fecha := Fecha agregarFechasConFormatoDeAnio: unAnio 		            mes: unMes 		            dia: unDia 		            hora: unaHora		            minutos: unosMinutos. 		fechaObtenida := fecha obtenerFecha.	fechas add: fechaObtenida.		semanasTotales timesRepeat: [ fechaIncrementada := fecha incrementarleDiasALaFecha: fechaObtenida 		xDias: diasEnUnaSemana.		fechas add: fechaIncrementada.		fechaObtenida := fechaIncrementada. 		]	 	! !!Evento methodsFor: 'as yet unclassified' stamp: 'MartinStefanelli 9/30/2018 23:27'!estaInvitado: unInvitado	^ ( invitados includes: unInvitado )! !!Evento methodsFor: 'as yet unclassified' stamp: 'MartinStefanelli 9/30/2018 23:27'!esTuNombre: unNombre	^ ( nombre = unNombre )! !!Evento methodsFor: 'as yet unclassified' stamp: 'MartinStefanelli 9/30/2018 19:38'!esValidaLaFecha: unaFecha	^ ( fechas includes: unaFecha )! !!Evento methodsFor: 'as yet unclassified' stamp: 'MartinStefanelli 9/30/2018 19:40'!esSemanal	^ ( fechas size > 1 )! !!Evento methodsFor: 'as yet unclassified' stamp: 'MartinStefanelli 9/30/2018 19:14'!agregarNombre: unNombre	nombre := unNombre ! !!Evento methodsFor: 'as yet unclassified' stamp: 'MartinStefanelli 9/30/2018 23:28'!obtenerFechas	( fechas size = 0 ) ifTrue: [ ( FechasNoDefinidasError new ) signal ].		^ fechas.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Evento class	instanceVariableNames: ''!!Evento class methodsFor: 'as yet unclassified' stamp: 'MartinStefanelli 9/30/2018 19:46'!conNombre: nombreEvento invitados: unosInvitados semanas: unasSemanas anio: unAnio mes: unMes dia: unDia hora: unaHora	| evento |		evento := Evento new.	evento agregarNombre: nombreEvento.	evento agregarInvitados: unosInvitados.	evento agregarFechasConFormatoDeSemanas: unasSemanas 	       anio: unAnio	       mes: unMes 	       dia: unDia	       hora: unaHora.		^ evento.   ! !Object subclass: #Fecha	instanceVariableNames: 'fechaInicio'	classVariableNames: ''	poolDictionaries: ''	category: 'TP1'!!Fecha methodsFor: 'as yet unclassified' stamp: 'MartinStefanelli 10/1/2018 01:30'!obtenerFecha	^ fechaInicio ! !!Fecha methodsFor: 'as yet unclassified' stamp: 'MartinStefanelli 10/1/2018 01:37'!incrementarleDiasALaFecha: unaFecha xDias: unosDias	| fechaIncrementada |		fechaIncrementada := unaFecha + ( Duration days: unosDias ).		^ fechaIncrementada. ! !!Fecha methodsFor: 'as yet unclassified' stamp: 'MartinStefanelli 10/1/2018 01:29'!agregarFecha: unaFecha	fechaInicio := unaFecha. ! !!Fecha methodsFor: 'initialization' stamp: 'MartinStefanelli 10/14/2018 21:43'!initialize		fechaInicio := nil.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Fecha class	instanceVariableNames: ''!!Fecha class methodsFor: 'as yet unclassified' stamp: 'MartinStefanelli 10/1/2018 01:29'!agregarFechasConFormatoDeAnio: unAnio mes: unMes dia: unDia hora: unaHora minutos: unosMinutos	| fecha fechaInstancia |		fechaInstancia := Fecha new. 	fecha := DateAndTime year: unAnio month: unMes day: unDia hour: unaHora minute: unosMinutos.		fechaInstancia agregarFecha: fecha.		^ fechaInstancia.   ! !Error subclass: #FechasNoDefinidasError	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'TP1'!Object subclass: #GestionadorDeEventos	instanceVariableNames: 'almacenamiento'	classVariableNames: ''	poolDictionaries: ''	category: 'TP1'!!GestionadorDeEventos methodsFor: 'initialization' stamp: 'MartinStefanelli 10/15/2018 19:19'!initialize	almacenamiento := Dictionary new. ! !!GestionadorDeEventos methodsFor: 'as yet unclassified' stamp: 'MartinStefanelli 9/30/2018 16:48'!obtener: unEvento	^ ( [ almacenamiento at: unEvento ] on: ( KeyNotFound ) do: [ ( NoExisteEventoError new ) signal ] )! !!GestionadorDeEventos methodsFor: 'as yet unclassified' stamp: 'MartinStefanelli 10/15/2018 17:58'!agregarUnEventoConNombre: nombreEvento invitados: unosInvitados semanas: unasSemanas enAnio: unAnio mes: unMes dia: unDia hora: unaHora	| evento copiaInvitados |		copiaInvitados := unosInvitados copy.		evento := Evento conNombre: nombreEvento 	                 invitados: copiaInvitados 	                 semanas: unasSemanas 	                 anio: unAnio 	                 mes: unMes 	                 dia: unDia 	                 hora: unaHora.		almacenamiento at: nombreEvento put: evento. 		! !!GestionadorDeEventos methodsFor: 'as yet unclassified' stamp: 'MartinStefanelli 9/30/2018 16:42'!remover: unEvento	[ almacenamiento removeKey: unEvento ] on: ( KeyNotFound ) do: [ ( NoExisteEventoError new ) signal ]! !!GestionadorDeEventos methodsFor: 'as yet unclassified' stamp: 'MartinStefanelli 9/30/2018 16:19'!existe: unEvento		[ almacenamiento at: unEvento ] on: ( KeyNotFound ) do: [ ^ false ].		^ true.! !Object subclass: #Invitable	instanceVariableNames: 'nombre eventos'	classVariableNames: ''	poolDictionaries: ''	category: 'TP1'!!Invitable methodsFor: 'initialization' stamp: 'MartinStefanelli 10/14/2018 22:47'!initialize	nombre := ''.	eventos := OrderedCollection new.! !!Invitable methodsFor: 'as yet unclassified' stamp: 'MartinStefanelli 10/15/2018 14:33'!_BuscarPosicionDeEvento: unEvento	| nombreEvento posicionInvalida |	( eventos ) doWithIndex: [ :evento :i | 		nombreEvento := evento obtenerNombre.				( nombreEvento = unEvento ) ifTrue: [ ^ i ]. 				].		posicionInvalida := -1.	^ posicionInvalida   			! !!Invitable methodsFor: 'as yet unclassified' stamp: 'MartinStefanelli 10/14/2018 22:49'!agregarEvento: unEvento		eventos add: unEvento ! !!Invitable methodsFor: 'as yet unclassified' stamp: 'MartinStefanelli 10/14/2018 23:16'!esTuNombre: unNombre	^ ( nombre = unNombre )! !!Invitable methodsFor: 'as yet unclassified' stamp: 'MartinStefanelli 10/15/2018 20:40'!removerEvento: unEvento	| posicionEvento posicionInvalida |		posicionInvalida := -1.	posicionEvento  := self _BuscarPosicionDeEvento: unEvento. 		( posicionEvento = posicionInvalida ) ifTrue: [ ^ ( NoExisteEventoError new ) signal ].		eventos removeAt: posicionEvento ! !!Invitable methodsFor: 'as yet unclassified' stamp: 'MartinStefanelli 10/15/2018 15:24'!asistirasAlEvento: unEvento	| nombreEvento |	( eventos ) do: [ :evento | 		nombreEvento := evento obtenerNombre.				( nombreEvento = unEvento ) ifTrue: [ ^ true ] 				].		^ false.! !!Invitable methodsFor: 'as yet unclassified' stamp: 'MartinStefanelli 10/14/2018 22:50'!agregarNombre: unNombre	nombre := unNombre ! !!Invitable methodsFor: 'as yet unclassified' stamp: 'MartinStefanelli 10/14/2018 23:17'!estaOcupadoEnFecha: unaFecha	( eventos ) do: [ :evento |				( evento esValidaLaFecha: unaFecha ) ifTrue: [ 			^ true ] 				].		^ false.! !Error subclass: #InvitadoNoEncontradoError	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'TP1'!Error subclass: #NoExisteEventoError	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'TP1'!!NoExisteEventoError methodsFor: 'testing' stamp: 'MartinStefanelli 10/1/2018 12:29'!isResumable	^ true.! !Error subclass: #NombreNoDefinidoError	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'TP1'!Invitable subclass: #Persona	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'TP1'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Persona class	instanceVariableNames: ''!!Persona class methodsFor: 'as yet unclassified' stamp: 'MartinStefanelli 9/30/2018 22:10'!conNombre: unNombre yEvento: unEvento		| persona |		persona := Persona new.	persona agregarNombre: unNombre.	persona agregarEvento: unEvento.		^ persona.   		! !Error subclass: #PersonaYaExistenteError	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'TP1'!Invitable subclass: #Recurso	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'TP1'!!Recurso methodsFor: 'as yet unclassified' stamp: 'MartinStefanelli 10/14/2018 23:40'!_ValidarEvento: unEvento	| fechas |		fechas := unEvento obtenerFechas.		( fechas ) do: [ :fecha | 				( self estaOcupadoEnFecha: fecha ) ifTrue: [ 			( RecursoOcupadoError new ) signal ] 				].	! !!Recurso methodsFor: 'as yet unclassified' stamp: 'MartinStefanelli 10/14/2018 23:38'!agregarEvento: unEvento		self _ValidarEvento: unEvento. 	eventos add: unEvento 	 ! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Recurso class	instanceVariableNames: ''!!Recurso class methodsFor: 'as yet unclassified' stamp: 'MartinStefanelli 9/30/2018 22:49'!conNombre: unNombre yEvento: unEvento	| recurso |		recurso := Recurso new.	recurso agregarNombre: unNombre.	recurso agregarEvento: unEvento.		^ recurso.   ! !Error subclass: #RecursoOcupadoError	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'TP1'!Error subclass: #RecursoYaExistenteError	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'TP1'!