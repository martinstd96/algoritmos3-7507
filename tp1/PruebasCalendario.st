'From Pharo6.0 of 13 May 2016 [Latest update: #60543] on 16 September 2018 at 8:21:51.947529 pm'!TestCase subclass: #PruebasCalendario	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'TP1-Tests'!!PruebasCalendario methodsFor: 'test' stamp: 'TomasBustamante 9/16/2018 20:20'!test02AgregarEventoSimple    | calendario invitados |    invitados := OrderedCollection new.    invitados add: 'Pedro'.    calendario := Calendario new.    calendario agregarPersona: 'Pedro'.    calendario agregarEventoConNombre: 'Siesta'               invitados: invitados               enAnio: 2019 mes: 5 dia: 4 hora: 10.    self assert: (calendario estaOcupado: 'Pedro'	                           enAnio: 2019 mes: 5 dia: 4 hora: 10).    self deny: (calendario estaOcupado: 'Pedro'                           enAnio: 2019 mes: 5 dia: 4 hora: 11).! !!PruebasCalendario methodsFor: 'test' stamp: 'TomasBustamante 9/16/2019 19:46'!test01AgregarPersonas    | calendario |	    calendario := Calendario new.	    self deny: (calendario existePersona: 'Juan').	    calendario agregarPersona: 'Juan'.	    self assert: (calendario existePersona: 'Juan').    self deny: (calendario existePersona: 'Pedro').! !!PruebasCalendario methodsFor: 'test' stamp: 'TomasBustamante 9/16/2019 19:55'!test07PersonaAdmiteSuperposicion    | calendario |    calendario := Calendario new.    calendario agregarPersona: 'Pedro'.    calendario agregarEventoConNombre: 'Visitar oculista'               invitados: 	#('Pedro')	             enAnio: 2019 mes: 5 dia: 4 hora: 10.    self assert: (calendario estaOcupado: 'Pedro'                             enAnio: 2019 mes: 5 dia: 4 hora: 10).    calendario agregarEventoConNombre: 'Leer Las Venas abiertas de America Latina'               invitados: #('Pedro')               enAnio: 2019 mes: 5 dia: 4 hora: 10.    self assert: (calendario estaOcupado: 'Pedro'                             enAnio: 2019 mes: 5 dia: 4 hora: 10).! !!PruebasCalendario methodsFor: 'test' stamp: 'TomasBustamante 9/16/2019 19:56'!test08RecursoNoAdmiteSuperposicion    | calendario invitados |    invitados := OrderedCollection new.    invitados add: 'Pedro'; add: 'Cama'.    calendario := Calendario new.    calendario agregarPersona: 'Pedro'.    calendario agregarRecurso: 'Cama'.    calendario agregarEventoSemanalConNombre: 'Siesta'               semanas: 2               invitados: invitados               enAnio: 2019 mes: 5 dia: 4 hora: 10.    self assert: (calendario estaOcupado: 'Cama'                             enAnio: 2019 mes: 5 dia: 11 hora: 10).    self should: [	      calendario agregarEventoConNombre: 'Gran siesta'	                 invitados: invitados	                 enAnio: 2019 mes: 5 dia: 11 hora: 10     ] raise: RecursoOcupadoError.! !!PruebasCalendario methodsFor: 'test' stamp: 'TomasBustamante 9/16/2019 20:11'!test09RemoverEvento    | calendario invitados |    invitados := OrderedCollection new.    invitados add: 'Pedro'.    calendario := Calendario new.    calendario agregarPersona: 'Pedro'.    calendario agregarEventoConNombre: 'Siesta'               invitados: invitados               enAnio: 2019 mes: 5 dia: 4 hora: 10.    self assert: (calendario estaOcupado: 'Pedro'                             enAnio: 2019 mes: 5 dia: 4 hora: 10).        calendario removerEvento: 'Siesta'.    self deny: (calendario estaOcupado: 'Pedro'                           enAnio: 2019 mes: 5 dia: 4 hora: 10).	    calendario agregarEventoSemanalConNombre: 'Gran Siesta'               semanas: 3               invitados: #('Pedro') " coleccion de un string "               enAnio: 2019 mes: 10 dia: 4 hora: 10.    " ocupado por 3 semanas "    self assert: (calendario estaOcupado: 'Pedro'                             enAnio: 2019 mes: 10 dia: 4 hora: 10).    self assert: (calendario estaOcupado: 'Pedro'                             enAnio: 2019 mes: 10 dia: 11 hora: 10).    self assert: (calendario estaOcupado: 'Pedro'                             enAnio: 2019 mes: 10 dia: 18 hora: 10).    " desocupado la cuarta semana "    self deny: (calendario estaOcupado: 'Pedro'                           enAnio: 2019 mes: 10 dia: 25 hora: 10).    calendario removerEvento: 'Gran Siesta'.    " desocupado las cuatro semanas "    self deny: (calendario estaOcupado: 'Pedro'                           enAnio: 2019 mes: 10 dia: 4 hora: 10).    self deny: (calendario estaOcupado: 'Pedro'                           enAnio: 2019 mes: 10 dia: 11 hora: 10).    self deny: (calendario estaOcupado: 'Pedro'                           enAnio: 2019 mes: 10 dia: 18 hora: 10).    self deny: (calendario estaOcupado: 'Pedro'                           enAnio: 2019 mes: 10 dia: 25 hora: 10).! !!PruebasCalendario methodsFor: 'test' stamp: 'TomasBustamante 9/16/2018 20:20'!test06AgregarEventoConRecurso    | calendario |    calendario := Calendario new.    calendario agregarPersona: 'Pedro'.    calendario agregarPersona: 'Pablo'.    calendario agregarRecurso: 'Parrilla'.    calendario agregarEventoConNombre: 'Asado vegano'               invitados: #('Pedro' 'Pablo' 'Parrilla')               enAnio: 2019 mes: 5 dia: 4 hora: 10.	    self assert: (calendario estaOcupado: 'Pedro'                             enAnio: 2019 mes: 5 dia:4  hora: 10).    self assert: (calendario estaOcupado: 'Pablo'                             enAnio: 2019 mes: 5 dia:4  hora: 10).    self assert: (calendario estaOcupado: 'Parrilla'                             enAnio: 2019 mes: 5 dia:4  hora: 10).! !!PruebasCalendario methodsFor: 'test' stamp: 'TomasBustamante 9/16/2019 19:52'!test05AgregarRecursos    | calendario |	    calendario := Calendario new.	    self deny: (calendario existePersona: 'Pedro').    self deny: (calendario existeRecurso: 'Proyector').	    calendario agregarPersona: 'Pedro'.    calendario agregarRecurso: 'Proyector'.	    self assert: (calendario existeRecurso: 'Proyector').! !!PruebasCalendario methodsFor: 'test' stamp: 'TomasBustamante 9/16/2019 19:51'!test03AgregarEventoSemanal    | calendario |    calendario := Calendario new.    calendario agregarPersona: 'Pedro'.    calendario agregarEventoSemanalConNombre: 'Siesta'               semanas: 3               invitados: #('Pedro') " coleccion de un string "               enAnio: 2019 mes: 5 dia: 4 hora: 10.    " ocupado por 3 semanas "    self assert: (calendario estaOcupado: 'Pedro'                             enAnio: 2019 mes: 5 dia: 4 hora: 10).    self assert: (calendario estaOcupado: 'Pedro'                             enAnio: 2019 mes: 5 dia: 11 hora: 10).    self assert: (calendario estaOcupado: 'Pedro'                             enAnio: 2019 mes: 5 dia: 18 hora: 10).    " desocupado la cuarta semana "    self deny: (calendario estaOcupado: 'Pedro'                           enAnio: 2019 mes: 5 dia: 25 hora: 10).! !!PruebasCalendario methodsFor: 'test' stamp: 'TomasBustamante 9/16/2018 20:20'!test04AgregarEventoSimpleConVariosInvitados    | calendario |    calendario := Calendario new.    calendario agregarPersona: 'Pedro'.    calendario agregarPersona: 'Pablo'.    calendario agregarPersona: 'Maria'.    calendario agregarEventoConNombre: 'Partida de ajedrez'               invitados: #('Pedro' 'Pablo') " Coleccion de strings "               enAnio: 2019 mes: 5 dia: 4 hora: 10.    self assert: (calendario estaOcupado: 'Pedro'                             enAnio: 2019 mes: 5 dia: 4 hora: 10).    self assert: (calendario estaOcupado: 'Pablo'                             enAnio: 2019 mes: 5 dia: 4 hora: 10).    self deny: (calendario estaOcupado: 'Maria'                           enAnio: 2019 mes: 5 dia: 4 hora: 10).! !